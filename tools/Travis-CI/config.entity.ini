# EMACS settings: -*- tab-width: 2; indent-tabs-mode: t -*-
# vim: tabstop=2:shiftwidth=2:noexpandtab
# kate: tab-width 2; replace-tabs off; indent-width 2;
# 
# ==============================================================================
# Authors:          Patrick Lehmann
# 
# Config file:      Global configuration file
# 
# Description:
# ------------------------------------
# This file defines:
#   - common directory names
#   - directory names for sub namespaces
#   - prefixes for namespaces
#
# License:
# ==============================================================================
# Copyright 2017-2019 Patrick Lehmann - Bötzingen, Germany
# Copyright 2007-2016 Technische Universität Dresden - Germany
#                     Chair of VLSI-Design, Diagnostics and Architecture
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
#
# LIB.arith
# ==============================================================================
[IP.arith.prng]
Description =       Pseudo Random Number Generator (PRNG)
tb =                VHDLTestbench
nl1 =               QuartusNetlist
nl2 =               XSTNetlist
nl3 =               LSENetlist
nl4 =               VivadoNetlist
[TB.arith.prng.tb]
tb =                VHDLTestbenchArchitecture
[QMAP.arith.prng.nl1]
[XST.arith.prng.nl2]
[LSE.arith.prng.nl3]
[VIVADO.arith.prng.nl4]


# LIB.common
# ==============================================================================
[IP.common.config]
tb =                VHDLTestbench
[TB.common.config.tb]
TBName =            ${IP.%{Parent}:Name}


# LIO.io.ddrio
# ------------------------------------------------------------------------------
[IP.io.ddrio.in]
tb =                VHDLTestbench
[TB.io.ddrio.in.tb]

[IP.io.ddrio.inout]
tb =                VHDLTestbench
nl1 =               XSTNetlist
nl2 =               VivadoNetlist
HDLParameters =     BITS=2
[TB.io.ddrio.inout.tb]
[XST.io.ddrio.inout.nl1]
[VIVADO.io.ddrio.inout.nl2]

[IP.io.ddrio.out]
tb =                VHDLTestbench
nl1 =               XSTNetlist
nl2 =               VivadoNetlist
HDLParameters =     BITS=2
[TB.io.ddrio.out.tb]
[XST.io.ddrio.out.nl1]
[VIVADO.io.ddrio.out.nl2]


# LIB.net.eth10g
# ------------------------------------------------------------------------------
[IP.net.eth10g.PCS_PMA_Series7]
nl =                CoreGenNetlist
[XST.net.eth10g.PCS_PMA_Series7.nl]
CoreGeneratorFile = ${SrcDir}/Xilinx/Series7/${TopLevel}.xco
PostCopyRules =     ${DefaultPostCopyNGC}
                    ${DefaultPostCopyVHDL}
                    ${SPECIAL:OutputDir}/${TopLevel}/example_design/${TopLevel}_block.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_block.vhdl
                    ${SPECIAL:OutputDir}/${TopLevel}/example_design/gtx/${TopLevel}_gtwizard_10gbaser.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_gtwizard_10gbaser.vhdl
                    ${SPECIAL:OutputDir}/${TopLevel}/example_design/gtx/${TopLevel}_gtwizard_10gbaser_gt.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_gtwizard_10gbaser_gt.vhdl
PostReplaceRules =  ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "-- synthesis translate_off\n" -> ""
                    ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "end eth10g_PCS_PMA_Series7;\n" -> "end eth10g_PCS_PMA_Series7;\n\n-- synthesis translate_off"


# LIB.xil.mig
# ------------------------------------------------------------------------------
[IP.xil.mig.Atlys_1x128]
nl =                  XSTNetlist
cg =                  CoreGenNetlist
# step 1: coregen
[CG.xil.mig.Atlys_1x128.cg]
CoreGeneratorFile =   ${SrcDir}/${TopLevel}.xco
RulesFile =           ${DefaultRulesFile}
# step 2: generate netlist
[XST.xil.mig.Atlys_1x128.nl]
Dependencies =        CG.xil.mig.Atlys_1x128.cg
# use .files file from "xst" directory
FilesFile =           ${XSTDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =           ${DefaultRulesFile}
XSTConstraintsFile =  ${XSTDir}/${TopLevel}.xcf
# example for different clock and no clock buffer
#HDLParameters =  C3_CLKOUT2_DIVIDE=8; C3_INPUT_CLK_TYPE="NONE"
