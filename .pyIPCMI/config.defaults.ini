# EMACS settings: -*- tab-width: 2; indent-tabs-mode: t -*-
# vim: tabstop=2:shiftwidth=2:noexpandtab
# kate: tab-width 2; replace-tabs off; indent-width 2;
#
# ==============================================================================
# Authors:          Patrick Lehmann
#
# Config file:      Global configuration file
#
# Description:
# ------------------------------------
#    This file defines:
#    - default option values for sections
#
# License:
# ==============================================================================
# Copyright 2017-2019 Patrick Lehmann - Bötzingen, Germany
# Copyright 2007-2016 Technische Universität Dresden - Germany
#                     Chair of VLSI-Design, Diagnostics and Architecture
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
#
[CONFIG.DirectoryNames]
HDLSourceFiles =          src
TestbenchFiles =          tb
NetlistFiles =            netlist
ConstraintFiles =         ucf
SimulatorFiles =          sim
TemporaryFiles =          temp
PrecompiledFiles =        ${TemporaryFiles}/precompiled

# Aldec files
ActiveHDLFiles =          activehdl
RivieraPROFiles =         rivierapro

# Altera files
AlteraSpecificFiles =     altera
QuartusSynthesisFiles =   quartus

# Cocotb files
CocotbFiles =             cocotb

# GHDL/GTKWave files
GHDLFiles =               ghdl
# GTKWaveFiles =            gtkw

# Lattice files
LatticeSpecificFiles =    lattice
LatticeSynthesisFiles =   lse

# Mentor files
ModelSimFiles =           vsim
QuestaSimFiles =          ${ModelSimFiles}

# Synopsys files

# Xilinx files
XilinxSpecificFiles =     xilinx
ISESynthesisFiles =       xst
ISECoreGeneratorFiles =   coregen
ISESimulatorFiles =       isim
VivadoSimulatorFiles =    xsim
VivadoSynthesisFiles =    vivado
VivadoIPCatalogFiles =    xci


[BOARD.DEFAULT]
Name =                    %{Name}
ConstraintDir =           ${%{ParentWithRoot}:Name}


[PoC.DEFAULT]
Visibility =              Public
Name =                    %{Name}
DirectoryName =           ${Name}
Prefix =                  ${%{ParentWithRoot}:Name}
# build directories recursively from parent + directory name of the sub-namespace
RelDir =                  ${%{ParentWithRoot}:RelDir}/${DirectoryName}
SrcDir =                  ${%{ParentWithRoot}:SrcDir}/${DirectoryName}
TBDir =                   ${%{ParentWithRoot}:TBDir}/${DirectoryName}
SimDir =                  ${%{ParentWithRoot}:SimDir}/${DirectoryName}
NLDir =                   ${%{ParentWithRoot}:NLDir}/${DirectoryName}
XSTDir =                  ${%{ParentWithRoot}:XSTDir}/${DirectoryName}
QMAPDir =                 ${%{ParentWithRoot}:QMAPDir}/${DirectoryName}


[IP.DEFAULT]
Visibility =              Public
Name =                    %{Name}
EntityPrefix =            ${PoC.%{Parent}:Name}
FilesFile =               ${SrcDir}/${EntityPrefix}_${Name}.files
# inherit directories from IP core section
RelDir =                  ${PoC.%{Parent}:RelDir}
SrcDir =                  ${PoC.%{Parent}:SrcDir}
TBDir =                   ${PoC.%{Parent}:TBDir}
SimDir =                  ${PoC.%{Parent}:SimDir}
NLDir =                   ${PoC.%{Parent}:NLDir}
XSTDir =                  ${PoC.%{Parent}:XSTDir}
QMAPDir =                 ${PoC.%{Parent}:QMAPDir}
Dependencies =
# VHDL Generics or Verilog Parameters, Example: key1=value1; key2=value2
HDLParameters =


[TB.DEFAULT]
Visibility =              Public
TBName =                  ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
TestbenchModule =         ${TBName}_tb
FilesFile =               ${TBDir}/${TestbenchModule}.files
# inherit directories from IP core section
SrcDir =                  ${IP.%{Parent}:SrcDir}
TBDir =                   ${IP.%{Parent}:TBDir}
SimDir =                  ${IP.%{Parent}:SimDir}
# vendor specific simulator files
# Aldec
aSimBatchScript =         ${PoC:SimDir}/aSim.batch.tcl
aSimGUIScript =           ${PoC:SimDir}/aSim.gui.tcl
aSimWaveScript =          ${SimDir}/${TestbenchModule}.awc
# GHDL / GTKWave
ghdlWaveformOptionFile =  ${SimDir}/${TestbenchModule}.ghdl
ghdlWaveformFileFormat =  ghw
gtkwSaveFile =            ${SimDir}/${TestbenchModule}.gtkw
# ModelSim / QuestaSim
vSimBatchScript =         ${SimDir}/${TestbenchModule}.vsim.batch.tcl
vSimGUIScript =           ${SimDir}/${TestbenchModule}.vsim.gui.tcl
vSimWaveScript =          ${SimDir}/${TestbenchModule}.wdo
vSimDefaultBatchScript =  ${PoC:SimDir}/vSim.batch.tcl
vSimDefaultGUIScript =    ${PoC:SimDir}/vSim.gui.tcl
vSimDefaultWaveScript =   ${PoC:SimDir}/vSim.default.wdo
# Xilinx ISE
iSimBatchScript =         ${PoC:SimDir}/iSim.batch.tcl
iSimGUIScript =           ${PoC:SimDir}/iSim.gui.tcl
iSimWaveformConfigFile =  ${SimDir}/${TestbenchModule}.wcfg
# Xilinx Vivado
xSimBatchScript =         ${PoC:SimDir}/xSim.batch.tcl
xSimGUIScript =           ${PoC:SimDir}/xSim.gui.tcl
xSimWaveformConfigFile =  ${SimDir}/${TestbenchModule}.wcfg


[VSIM.DEFAULT]


[ASIM.DEFAULT]


[RPRO.DEFAULT]


[QSIM.DEFAULT]


[ISIM.DEFAULT]


[XSIM.DEFAULT]


[GHDL.DEFAULT]


[COCOTB.DEFAULT]
Visibility =              Public
TBName =                  ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
TopLevel =                ${TBName}
TestbenchModule =         ${TBName}_cocotb
FilesFile =               ${TBDir}/${TBName}_tb.files
CocotbMakefile =          ${PoC:SimDir}/Cocotb.Makefile
# inherit directories from IP core section
SrcDir =                  ${IP.%{Parent}:SrcDir}
TBDir =                   ${IP.%{Parent}:TBDir}
SimDir =                  ${IP.%{Parent}:SimDir}


[CG.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
CoreGeneratorFile =       ${SrcDir}/${TopLevel}.xco
RulesFile =                
Dependencies =
# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}

# empty task lists
PreCopyRules =            
PreReplaceRules =          
PostCopyRules =            
PostReplaceRules =        
PostDeleteRules =          
# Use these predefined options to override a value
# ------------------------------------------------------------------------------
DefaultRulesFile =        ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.rules
DefaultPostCopyNGC =      ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
DefaultPostCopyVHDL =     ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
DefaultPostCopyNCF =      ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf


[LSE.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
FilesFile =               ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =                
Dependencies =
# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}
# if no rules file is given, check these rules
PreCopyRules =            
PreReplaceRules =          
PostCopyRules =            
PostReplaceRules =        
PostDeleteRules =          
# HDLParameter inheritance, see also IP.DEFAULT
HDLParameters =           ${IP.%{Parent}:HDLParameters}

[QMAP.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
FilesFile =               ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =
Dependencies =
# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}
QMAPDir =                 ${IP.%{Parent}:QMAPDir}
# if no rules file is given, check these rules
PreCopyRules =            
PreReplaceRules =          
PostCopyRules =            
PostReplaceRules =        
PostDeleteRules =          
# HDLParameter inheritance, see also IP.DEFAULT
HDLParameters =           ${IP.%{Parent}:HDLParameters}


[XST.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
# QUESTION: where to store these files? in src or xst dir?
# FilesFile =               ${IP.%{Parent}:FilesFile}
FilesFile =               ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =                
Dependencies =            
# Note: If a *.rules file should be used, then set its value to ${DefaultRulesFile}

# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}
XSTDir =                  ${IP.%{Parent}:XSTDir}
# if no rules file is given, check these rules
PreCopyRules =            
PreReplaceRules =          
PostCopyRules =           ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
PostReplaceRules =        
PostDeleteRules =          
# Use these predefined options to override a value
# ------------------------------------------------------------------------------
DefaultRulesFile =        ${XSTDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.rules
DefaultPostCopyNGC =      ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
# DefaultPostCopyVHDL =     ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
# DefaultPostCopyNCF =      ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
XSTNoConstraintsFile =    ${PoC:XSTDir}/empty.xcf
# Xilinx XST specific files
XSTConstraintsFile =      ${XSTNoConstraintsFile}
XSTOptionsFile =          ${PoC:XSTDir}/${SPECIAL:DeviceSeries}.xst
XSTFilterFile =           ${PoC:XSTDir}/default.filter
# HDLParameter inheritance, see also IP.DEFAULT
HDLParameters =           ${IP.%{Parent}:HDLParameters}
# Overrideable XST options
XSTOption.UseNewParser =                    YES
XSTOption.InputFormat =                     mixed
XSTOption.OutputFormat =                    NGC
XSTOption.OptimizationMode =                Speed
XSTOption.OptimizationLevel =               2
XSTOption.PowerReduction =                  NO
XSTOption.IgnoreSynthesisConstraintsFile =  NO
XSTOption.KeepHierarchy =                   Soft
XSTOption.NetListHierarchy =                As_Optimized
XSTOption.GenerateRTLView =                 NO
XSTOption.Globaloptimization =              AllClockNets
XSTOption.ReadCores =                       YES
XSTOption.WriteTimingConstraints =          NO
XSTOption.CrossClockAnalysis =              YES
XSTOption.HierarchySeparator =              /
XSTOption.BusDelimiter =                    <>
XSTOption.Case =                            Maintain
XSTOption.SliceUtilizationRatio =           100
XSTOption.BRAMUtilizationRatio =            100
XSTOption.DSPUtilizationRatio =             100
XSTOption.LUTCombining =                    Auto
XSTOption.ReduceControlSets =               Auto
XSTOption.Verilog2001 =                     YES
XSTOption.FSMExtract =                      YES
XSTOption.FSMEncoding =                     Auto
XSTOption.FSMSafeImplementation =           NO
XSTOption.FSMStyle =                        LUT
XSTOption.RAMExtract =                      YES
XSTOption.RAMStyle =                        Auto
XSTOption.ROMExtract =                      YES
XSTOption.ROMStyle =                        Auto
XSTOption.MUXExtract =                      YES
XSTOption.MUXStyle =                        Auto
XSTOption.DecoderExtract =                  YES
XSTOption.PriorityExtract =                 YES
XSTOption.ShRegExtract =                    YES
XSTOption.ShiftExtract =                    YES
XSTOption.XorCollapse =                     YES
XSTOption.AutoBRAMPacking =                 NO
XSTOption.ResourceSharing =                 YES
XSTOption.ASyncToSync =                     NO
XSTOption.UseDSP48 =                        Auto
XSTOption.IOBuf =                           NO
XSTOption.MaxFanOut =                       100000
XSTOption.BufG =                            32
XSTOption.RegisterDuplication =             YES
XSTOption.RegisterBalancing =               NO
XSTOption.SlicePacking =                    YES
XSTOption.OptimizePrimitives =              NO
XSTOption.UseClockEnable =                  Auto
XSTOption.UseSyncSet =                      Auto
XSTOption.UseSyncReset =                    Auto
XSTOption.PackIORegistersIntoIOBs =         Auto
XSTOption.EquivalentRegisterRemoval =       YES
XSTOption.SliceUtilizationRatioMaxMargin =  5


[VIVADO.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
# QUESTION: where to store these files? in src or xst dir?
# FilesFile =                ${IP.%{Parent}:FilesFile}
FilesFile =               ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =
Dependencies =
# Note: If a *.rules file should be used, then set its value to ${DefaultRulesFile}

# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}
# if no rules file is given, check these rules
PreCopyRules =
PreReplaceRules =
PostCopyRules =           ${SPECIAL:OutputDir}/${TopLevel}.dcp -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.dcp
PostReplaceRules =
PostDeleteRules =
# Use these predefined options to override a value
# ------------------------------------------------------------------------------
DefaultRulesFile =        ${XSTDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.rules
DefaultPostCopyDCP =      ${SPECIAL:OutputDir}/${TopLevel}.dcp -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.dcp
# DefaultPostCopyVHDL =     ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
# DefaultPostCopyNCF =      ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
# HDLParameter inheritance, see also IP.DEFAULT
HDLParameters =           ${IP.%{Parent}:HDLParameters}
SimHDLParameters =        ${IP.%{Parent}:SimHDLParameters}
SynthHDLParameters =      ${IP.%{Parent}:SynthHDLParameters}

[XCI.DEFAULT]
Visibility =              Public
TopLevel =                ${PoC.%{GrantParent}:Name}_${IP.%{Parent}:Name}
IPCatalogFile =           ${SrcDir}/${TopLevel}.xci
RulesFile =
Dependencies =
# inherit directories from IP core section
RelDir =                  ${IP.%{Parent}:RelDir}
SrcDir =                  ${IP.%{Parent}:SrcDir}
NLDir =                   ${IP.%{Parent}:NLDir}

# empty task lists
PreCopyRules =
PreReplaceRules =
PostCopyRules =
PostReplaceRules =
PostDeleteRules =
# Use these predefined options to override a value
# ------------------------------------------------------------------------------
DefaultRulesFile =        ${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.rules
DefaultPostCopyDCP =      ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.dcp
DefaultPostCopyVHDL =     ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
DefaultPostCopyXDC =      ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.xdc


[SPECIAL]
Device =        ERROR
DeviceSeries =  ERROR
OutputDir =     ERROR
